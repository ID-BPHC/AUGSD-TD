extends ../../../master-dashboard

block content
	style.
		td {
		cursor: pointer;
		}
	style.
		.custom-title {
			font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
			line-height: 1;
			color: #767777;
			font-weight: 500;
			margin: unset;
		}
		.custom-title2 {
			font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
			line-height: 1;
			color: #767777;
			font-weight: 500;
			margin: 10px -20px;
		}
		.profile{
			width: 64px;
			height: 64px;
			border-radius: 0%;
			display: block;
			padding-top: 24px;
			margin: 0 auto;
		}
		.profile-select:hover{
			background-color: rgba(243,243,243,1);
			cursor: pointer;
		}
		.custom{
			opacity: .68;
		}
		.form label {
			font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
			font-weight: 400;
			color: #000000;
			margin: 5px 10px 5px 0;
		}
		.form input {
			margin: 5px 10px 5px 0;
			padding: 10px;
			background-color: #fff;
			border: 1px solid #ddd;
		}
	div.mdl-cell.mdl-cell--12-col
		if isAdmin != []
			button.mdl-button.mdl-js-button.mdl-js-ripple-effect.mdl-button--colored.mdl-button--raised.center(data-stepper-next='' data-upgraded=',MaterialButton,MaterialRipple' type='submit' name='redirectButton' onclick="window.location.href='analytics/upload'")| Upload Data
	div.mdl-cell.mdl-cell--12-col.center
		h2 Student Analytics
		center
			div(id="studentInfo").table-responsive
				table(id="studentTable").mdl-data-table.mdl-js-data-table.mdl-shadow--2dp
					thead
						tr
							th.mdl-data-table__cell--non-numeric Name
							th.mdl-data-table__cell--non-numeric Student ID
							th.mdl-data-table__cell--non-numeric ERP ID
							th.mdl-data-table__cell--non-numeric BITSAT Score
							th.mdl-data-table__cell--non-numeric CGPA
					tbody
						each student,i in studentData
							tr
								td.mdl-data-table__cell--non-numeric #{student.idNo}
								td.mdl-data-table__cell--non-numeric #{student.studentName}
								td.mdl-data-table__cell--non-numeric #{student.erpId}
								td.mdl-data-table__cell--non-numeric #{student.bitsatScore}
								td.mdl-data-table__cell--non-numeric #{student.cgs[student.cgs.length-1]}
							tr(id="chartRow"+i, style="visibility:collapse;")
								td(colspan="5").mdl-data-table__cell--non-numeric
									div(id="chart"+i, style="width:600px;height:250px;display=none;")
		center 
			div(id="chart" style="width:600px;height:300px;")
		script.
			var data = [!{studentData}];
			for(let i=0; i<data.length; i++) {
				var tickvals = Array.from({length: data[i].cgs.length }, (v, k) => k + 1);
				console.log(data[i].semesters);
				var cgs = data[i].cgs;
				var semesters = data[i].semesters;
				var spliceidx = []
				var colours = [];
				for (let i = 0; i < cgs.length; i++) {
					if(cgs[i] == null) {
						cgs.splice(i, 1);
						semesters.splice(i, 1);
						i--;
					} else {
						if(cgs[i] <= 4.5) colours.push('rgb(255, 0, 0)');
						else if(cgs[i] <= 6.0) colours.push('rgb(0, 0, 255)');
						else colours.push('rgb(0, 255, 0)');
					}
				}
				var layout = {
					title: 'Semester-wise performance',
					xaxis: {tickmode: "array", tickvals: tickvals, ticktext : semesters,title: "Semesters -->"},
					yaxis: {title: "CGPA"}
				}
				let chart_i = document.getElementById('chart'+i);
				chart_i.style.display = "none";
				Plotly.newPlot(chart_i, [{
				x: tickvals,
				y: cgs,
				mode: 'lines+markers',
				type: 'scatter',
				marker: {
					size: 10,
					color: colours
				}}],  layout);
			}
			function addRowHandlers() {
				var table = document.getElementById("studentTable");
				var rows = table.getElementsByTagName("tr");
				for (let i = 1; i < rows.length; i += 2) {
					var currentRow = table.rows[i];
					var createClickHandler = 
						function(row) 
						{
							return function() { 
								var cell = row.getElementsByTagName("td")[0];
								var id = cell.innerHTML;
								var chartId = (i-1)/2;
								console.log("chartId:" + chartId);
								var chart = document.getElementById("chart"+chartId);
								var chartRow = document.getElementById("chartRow"+chartId);
								if (chart.style.display === "none") {
									chart.style.display = "block";
									chartRow.style.visibility = "visible";
								} else {
									chart.style.display = "none";
									chartRow.style.visibility = "collapse";
								}	
							};
						};

					currentRow.onclick = createClickHandler(currentRow);
				}
			}
			window.onload = addRowHandlers();